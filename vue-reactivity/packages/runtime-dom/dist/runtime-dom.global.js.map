{"version":3,"file":"runtime-dom.global.js","sources":["../../runtime-core/src/getSequence.js"],"sourcesContent":["// const arr = [1, 2, 4, 5, 6, 4, 3, 12, 3, 45, 5]\n//   0  1  2  3  4  5  6  7  8   9   10\n// const arr = [2, 3, 1, 5, 6, 8, 7, 9, 4]\nconst arr = [1, 4, 3, 7, 6, 8, 5, 9]\nexport  function getSequence(arr) {\n    const len = arr.length;\n    let start, middle, end;\n    const result = [0]; //放索引\n    const p = arr.slice(0); //保存arr中每个元素排序后的前一个元素的索引\n    const test = [arr[0]]\n    for (let i = 1; i < len; i++) {\n        const curr = arr[i];\n        if (curr !== 0) {\n            let resultLastIndex = result[result.length - 1];\n            if (arr[resultLastIndex] < curr) {\n                result.push(i);\n                p[i] = resultLastIndex\n                continue\n            }\n            start = 0;\n            end = result.length - 1;\n            while (start < end) {\n                middle = ((start + end) / 2) | 0;\n                if (arr[result[middle]] < curr) {\n                    start = middle + 1\n                } else {\n                    end = middle\n                }\n            }\n\n            if (curr < arr[result[start]]) {\n                if (start > 0) {\n                    p[i] = result[start - 1]\n                }\n                result[start] = i;\n                test[start] = curr\n\n            }\n        }\n\n    }\n    let resultLen = result.length;\n    let last = result[resultLen - 1];\n    while (resultLen-- > 0) {\n        result[resultLen] = arr[last];\n        last = p[last];\n    }\n    // console.log(result);\n    return result\n}\n\n\n// getSequence(arr)"],"names":[],"mappingslC,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;CAC3B,IAAI,IAAI,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC;CAC3B,IAAI,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;CACvB,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC3B,IAAI,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;CACzB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;CAClC,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;CAC5B,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE;CACxB,YAAY,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;CAC5D,YAAY,IAAI,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,EAAE;CAC7C,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CAC/B,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,gBAAe;CACtC,gBAAgB,QAAQ;CACxB,aAAa;CACb,YAAY,KAAK,GAAG,CAAC,CAAC;CACtB,YAAY,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;CACpC,YAAY,OAAO,KAAK,GAAG,GAAG,EAAE;CAChC,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;CACjD,gBAAgB,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,EAAE;CAChD,oBAAoB,KAAK,GAAG,MAAM,GAAG,EAAC;CACtC,iBAAiB,MAAM;CACvB,oBAAoB,GAAG,GAAG,OAAM;CAChC,iBAAiB;CACjB,aAAa;AACb;CACA,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;CAC3C,gBAAgB,IAAI,KAAK,GAAG,CAAC,EAAE;CAC/B,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,EAAC;CAC5C,iBAAiB;CACjB,gBAAgB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CAClC,gBAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,KAAI;AAClC;CACA,aAAa;CACb,SAAS;AACT;CACA,KAAK;CACL,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;CAClC,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;CACrC,IAAI,OAAO,SAAS,EAAE,GAAG,CAAC,EAAE;CAC5B,QAAQ,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;CACtC,QAAQ,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;CACvB,KAAK;CACL;CACA,IAAI,OAAO,MAAM;CACj}